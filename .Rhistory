names(trainSpam)[which.min(cvError)]
#  [1] "charDollar"
#Now, get a measure of uncertainity (about charDollar variable):
##  Use the best model from the group
predictionModel = glm(numType ~charDollar, family = "binomial", data=trainSpam)
## Get predictions on the test set
predictionTest = predict(predictionModel, testSpam)
predictedSpam = rep("nonspam", dim(testSpam[1]))
rep("nonspam", dim(testSpam)[1])
predictionTest = predict(predictionModel, testSpam)
predictedSpam = rep("nonspam", dim(testSpam)[1])
predictionModel = glm(numType ~charDollar, family = "binomial", data=trainSpam)
predictionModel
predictedSpam[predictionModel$fitted > 0.5] = "spam"
predictedSpam
table(predictedSpam, testSpam$type)
(61 + 458) / (1346 + 458 + 61 + 449)
class(predictedSpam)
install.packages("knitr")
install.packages("markdown")
install.packages("slidify")
library(datasets)
data(airquality)
summary(airquality)
This is my first R markdown file.
library(datasets)
data(airquality)
summary(airquality)
plot(airquality)
run(list=ls())
rm(list=ls())
plot(airquality)
and show the summary.
library(stats)
fit <- lm(Ozone ~ Wind + Solar.R + Temp, data=airquality)
summary(fit)
mean(x)
mean(x)
install.packages("xtable")
df <- read.csv("activity.csv")
setwd("~/Documents/Personal/R/Coursera/ReproducibleResearch/Ass1/RepData_PeerAssessment1")
ls()
dir()
df <- read.csv("activity.csv")
View(df)
View(df)
is.na(df)
is.na(df$steps)
any(is.na(df$steps))
sum(is.na(df$steps))
dim(df)
sum(is.na(df$date))
any(is.na(df$date))
sum(is.na(df$interval))
df <- dfRaw[!is.na(df$steps),]
# Ensure that present working directory contains activity.csv
dfRaw <- read.csv("activity.csv")
# Remove NA rows
df <- dfRaw[!is.na(df$steps),]
str(df)
?aggregate
aggregate(df, by=date, FUN=sum(steps))
aggregate(df, by=date, FUN=sum)
aggregate(df, by=df$date, FUN=sum)
aggregate(df$steps, by=df$date, FUN=sum)
aggregate(df$steps, by=list(df$date), FUN=sum)
stepsPerDay <- aggregate(df$steps, by=list(df$date), FUN=sum)
hist(stepsPerDay$x)
meanStepsPerDay <- mean(df$steps)
medianStepsPerDay <- median(df$steps)
View(df)
View(df)
rm(list=ls())
range(df$steps)
dfRaw <- read.csv("activity.csv")
# Remove NA rows
df <- dfRaw[!is.na(dfRaw$steps),]
range(df$steps)
stepsPerDay <- aggregate(df$steps, by=list(df$date), FUN=sum)
hist(stepsPerDay$x)
meanStepsPerDay <- mean(df$steps)
medianStepsPerDay <- median(df$steps)
head(df$steps)
head(df$steps, n = 100)
head(df$steps, n = 1000)
?hist
stepsPerDay
head(stepsPerDay, n = 100)
stepsPerDay <- aggregate(df$steps, by=list(df$date), FUN=sum)
hist(stepsPerDay$x)
meanStepsPerDay <- mean(stepsPerDay$x)
medianStepsPerDay <- median(stepsPerDay$x)
View(dfRaw)
View(df)
?format
fomrat(meanStepsPerDay, digits=1)
format(meanStepsPerDay, digits=1)
meanStepsPerDay
format(meanStepsPerDay)
The <u>mean</u> steps per day is:  `r format(meanStepsPerDay)`.
?hist
?plot
df$interval2 <- seq(1,nrow(df))
df$interval2
View(df)
df$interval2 <- seq(1,nrow(df[order(date,interval)]))
df$interval2 <- seq(1,nrow(df[order(df$date,df$interval)]))
df[order(df$date,df$interval)]
df[order(df$date,df$interval),]
df <- df[order(df$date,df$interval)]
# create a new field interval2 as an ordered timeseries
df$interval2 <- seq(1,nrow(df))
plot(df$interval2, df$steps, type="l")
df <- df[order(df$date,df$interval),]
# create a new field interval2 as an ordered timeseries
df$interval2 <- seq(1,nrow(df))
plot(df$interval2, df$steps, type="l")
?aggregate
avgStepsPer5MinInterval <- aggregate(df$steps, by=list(df$interval), FUN=mean)
avgStepsPer5MinInterval
class(√)
class(avgStepsPer5MinInterval)
avgStepsPer5MinInterval[0]
avgStepsPer5MinInterval[,0]
avgStepsPer5MinInterval[,1]
names(avgStepsPer5MinInterval)
names(stepsPerDay)
stepsPerDay <- aggregate(df$steps, by=list(df$date), FUN=sum)
with (stepsPerDay,
hist(x, main="Histogram of Steps Per Day",
xlab="Steps Per Day", breaks=10)
meanStepsPerDay <- meanx)
medianStepsPerDay <- median(x))
stepsPerDay <- aggregate(df$steps, by=list(df$date), FUN=sum)
with (stepsPerDay,
hist(x, main="Histogram of Steps Per Day",
xlab="Steps Per Day", breaks=10);
meanStepsPerDay <- meanx);
medianStepsPerDay <- median(x))
with (stepsPerDay,
hist(x, main="Histogram of Steps Per Day",
xlab="Steps Per Day", breaks=10)
meanStepsPerDay <- mean(x);
medianStepsPerDay <- median(x))
stepsPerDay <- aggregate(df$steps, by=list(df$date), FUN=sum)
hist(stepsPerDay$x, main="Histogram of Steps Per Day",
xlab="Steps Per Day", breaks=10)
meanStepsPerDay <- mean(stepsPerDay$x)
medianStepsPerDay <- median(stepsPerDay$x)
avgStepsPer5MinInterval <- aggregate(df$steps, by=list(df$interval), FUN=mean)
plot(df$interval2, df$steps, type="l")
avgStepsPer5MinInterval
View(avgStepsPer5MinInterval)
?min
max(avgStepsPer5MinInterval$x)
max(avgStepsPer5MinInterval$x)p
pmax(avgStepsPer5MinInterval$x)p
pmax(avgStepsPer5MinInterval$x)
which.max(avgStepsPer5MinInterval)
which.max(avgStepsPer5MinInterval$x)
View(avgStepsPer5MinInterval)
View(avgStepsPer5MinInterval)
max(avgStepsPer5MinInterval$x)
maxSteps5MinInterval <- avgStepsPer5MinInterval[which.max(avgStepsPer5MinInterval$)]
maxSteps5MinInterval <- avgStepsPer5MinInterval[which.max(avgStepsPer5MinInterval$), "Group.1"]
maxSteps5MinInterval <- avgStepsPer5MinInterval[which.max(avgStepsPer5MinInterval$x), "Group.1"]
maxSteps5MinInterval
countNA <- is.na(dfRaw$steps)
countNA <- sum(is.na(dfRaw$steps))
length(dfRaw)
nrow(dfRaw)
nrow(df)
countNA
View(stepsPerDay)
View(dfRaw)
dfNew$steps[is.na(dfRaw$steps)]
dfNew <- dfRaw
dfNew$steps[is.na(dfRaw$steps)]
dfNew[dfNew$steps[is.na(dfRaw$steps)],]
dfNew[is.na(dfRaw$steps),]
?sapply
lapply(dfNew[is.na(dfRaw$steps),], stepsPerDay[dfNew$date])
lapply(dfRaw[is.na(dfRaw$steps),], stepsPerDay[stepsPerDay$Group.1 == dfRaw$date])
dfNew <- dfRaw
dfNew[is.na(dfRaw$steps),]
names(avgStepsPer5MinInterval) <- c("interval", "avgSteps")
View(avgStepsPer5MinInterval)
maxSteps5MinInterval <- avgStepsPer5MinInterval[which.max(avgStepsPer5MinInterval$avgSteps), interval]
maxSteps5MinInterval <- avgStepsPer5MinInterval[which.max(avgStepsPer5MinInterval$avgSteps), "interval"]
# Ensure that present working directory contains activity.csv
dfRaw <- read.csv("activity.csv")
# Remove NA rows
df <- dfRaw[!is.na(dfRaw$steps),]
stepsPerDay <- aggregate(df$steps, by=list(df$date), FUN=sum)
hist(stepsPerDay$x, main="Histogram of Steps Per Day",
xlab="Steps Per Day", breaks=10)
meanStepsPerDay <- mean(stepsPerDay$x)
medianStepsPerDay <- median(stepsPerDay$x)
avgStepsPer5MinInterval <- aggregate(df$steps, by=list(df$interval), FUN=mean)
names(avgStepsPer5MinInterval) <- c("interval", "avgSteps")
plot(avgStepsPer5MinInterval$interval, avgStepsPer5MinInterval$avgSteps, type="l",
main="Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps")
maxSteps5MinInterval <- avgStepsPer5MinInterval[which.max(avgStepsPer5MinInterval$avgSteps), "interval"]
View(dfRaw)
View(avgStepsPer5MinInterval)
merge(dfRaw, avgStepsPer5MinInterval, by="interval")
dfNew <- merge(dfRaw, avgStepsPer5MinInterval, by="interval")
head(dfNew)
View(dfNew)
dim(dfNew)
dim(dfRaw)
dfNew[is.na(dfNew$steps),"steps"] <- dfNew$avgSteps
dfNew <- merge(dfRaw, avgStepsPer5MinInterval, by="interval")
dfNew[is.na(dfNew$steps),"steps"] <- dfNew[is.na(dfNew$steps),"avgSteps"]
View(dfNew)
View(dfNew)
dfNew2 <- dfNew[order(date,interval),]
dfNew2 <- dfNew[order(dfNew$date,drNew$interval),]
dfNew2 <- dfNew[order(dfNew$date,dfNew$interval),]
View(dfNew2)
dfNew2 <- dfNew[order(dfNew$interval,dfNew$date),]
View(dfNew2)
?interval
countNARows <- sum(is.na(dfRaw$steps))
# Replace NA steps on each day with the average steps that day
dfNew <- merge(dfRaw, avgStepsPer5MinInterval, by="interval")
dfNew[is.na(dfNew$steps),"steps"] <- dfNew[is.na(dfNew$steps),"avgSteps"]
dfNew2 <- dfNew[order(dfNew$date,dfNew$interval),c("steps","date","interval")]
countNARows <- sum(is.na(dfRaw$steps))
# Replace NA steps on each day with the average steps that day
dfNew <- merge(dfRaw, avgStepsPer5MinInterval, by="interval")
dfNew[is.na(dfNew$steps),"steps"] <- dfNew[is.na(dfNew$steps),"avgSteps"]
dfNew <- dfNew[order(dfNew$date,dfNew$interval),c("steps","date","interval")]
dfAll <- merge(dfRaw, avgStepsPer5MinInterval, by="interval")
View(dfAll)
View(dfAll)
dfAll[is.na(dfAll$steps),"steps"] <- dfAll[is.na(dfAll$steps),"avgSteps"]
View(avgStepsPer5MinInterval)
View(avgStepsPer5MinInterval)
View(dfRaw)
View(dfAll)
dfAll <- dfAll[order(dfAll$date,dfAll$interval),c("steps","date","interval")]
View(dfAll)
dfTemp <- merge(dfRaw, avgStepsPer5MinInterval, by="interval")
dfTemp <- dfTemp[order(dfTemp$date,dfTemp$interval),c("steps","avgSteps","date","interval")]
View(dfTemp)
stepsPerDayAll <- aggregate(dfAll$steps, by=list(dfAll$date), FUN=sum)
View(stepsPerDayAll)
View(stepsPerDay)
head(dfAll)
stepsPerDayAll
hist(stepsPerDayAll$x, main="Histogram of Steps Per Day /n(No missing Values)",
xlab="Steps Per Day", breaks=10)
stepsPerDay <- aggregate(df$steps, by=list(df$date), FUN=sum)$x
dfAll$dayType <- "weekday"
View(dfAll)
?weekdays
weekdays(dfAll$date)
weekdays(as.date(dfAll$date)
)
weekdays(as.Date(dfAll$date))
weekdays(as.date(dfAll$date), abbreviate=TRUE)
weekdays(as.Date(dfAll$date), abbreviate=TRUE)
weekdays(as.Date(dfAll$date), abbreviate=TRUE) %in% c("Sat","Sun")
dfAll <- merge(dfRaw, avgStepsPer5MinInterval, by="interval")
dfAll[is.na(dfAll$steps),"steps"] <- dfAll[is.na(dfAll$steps),"avgSteps"]
dfAll <- dfAll[order(dfAll$date,dfAll$interval),c("steps","date","interval")]
stepsPerDayAll <- aggregate(dfAll$steps, by=list(dfAll$date), FUN=sum)$x
hist(stepsPerDayAll, main="Histogram of Steps Per Day /n(No missing Values)",
xlab="Steps Per Day", breaks=10)
meanStepsPerDayAll <- mean(stepsPerDayAll)
medianStepsPerDayAll <- median(stepsPerDayAll)
isWeekend <- weekdays(as.Date(dfAll$date), abbreviate=TRUE) %in% c("Sat","Sun")
isWeekend
dfAll$dayOfWeekType <- "weekday"
isWeekend <- weekdays(as.Date(dfAll$date), abbreviate=TRUE) %in% c("Sat","Sun")
dfAll[isWeekend,dayOfWeekType] == "weekend"
dfAll$dayOfWeekType <- "weekday"
isWeekend <- weekdays(as.Date(dfAll$date), abbreviate=TRUE) %in% c("Sat","Sun")
dfAll[isWeekend, "dayOfWeekType""] == "weekend"
dfAll[isWeekend, "dayOfWeekType"] == "weekend"
dfAll[isWeekend, "dayOfWeekType"]
dfAll$dayOfWeekType <- "weekday"
isWeekend <- weekdays(as.Date(dfAll$date), abbreviate=TRUE) %in% c("Sat","Sun")
dfAll[isWeekend, "dayOfWeekType"] == "weekend"
dfAll$dayOfWeekType <- "weekday"
isWeekend <- weekdays(as.Date(dfAll$date), abbreviate=TRUE) %in% c("Sat","Sun")
dfAll[isWeekend, "dayOfWeekType"] <- "weekend"
View(dfAll)
dfAll[dfAll$dayOfWeekType == "weekend",]
dfAll[dfAll$dayOfWeekType == "weekday",]
nrow(dfAll[dfAll$dayOfWeekType == "weekday",])
nrow(dfAll[dfAll$dayOfWeekType == "weekend",])
class(dfAll$dayOfWeekType)
dfAll <- merge(dfRaw, avgStepsPer5MinInterval, by="interval")
dfAll[is.na(dfAll$steps),"steps"] <- dfAll[is.na(dfAll$steps),"avgSteps"]
dfAll <- dfAll[order(dfAll$date,dfAll$interval),c("steps","date","interval")]
View(dfAll)
View(dfAll)
isWeekend <- weekdays(as.Date(dfAll$date), abbreviate=TRUE) %in% c("Sat","Sun")
dfAll[isWeekend, "dayOfWeekType"] <- "weekend"
View(dfAll)
nrow(dfAll[dfAll$dayOfWeekType == "weekend",])
nrow(dfAll[dfAll$dayOfWeekType == "weekday",])
isWeekend <- weekdays(as.Date(dfAll$date), abbreviate=TRUE) %in% c("Sat","Sun")
dfAll[isWeekend, "dayOfWeekType"] <- "weekend"
dfAll[!isWeekend, "dayOfWeekType"] <- "weekday"
View(dfAll)
class(dfAll$dayOfWeekType)
dfAll$dayOfWeekType <- factor(dfAll$dayOfWeekType)
View(dfAll)
class(dfAll$dayOfWeekType)
dfAll$dayOfWeekType
levels(dfAll$dayOfWeekType)
table(dfAll$dayOfWeekType)
12960+4608
?subset
isWeekend <- weekdays(as.Date(dfAll$date), abbreviate=TRUE) %in% c("Sat","Sun")
dfAll[isWeekend, "dayOfWeekType"] <- "weekend"
dfAll[!isWeekend, "dayOfWeekType"] <- "weekday"
dfAll$dayOfWeekType <- factor(dfAll$dayOfWeekType)
#Two panel plot:  Avg Steps vs Interval for "weekday" and "weekend"
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
#  weekend:
with(subset(dfAll, dayOfWeekType == "weekend"),
avgStepsPer5MinInterval <- aggregate(df$steps, by=list(df$interval), FUN=mean)
names(avgStepsPer5MinInterval) <- c("interval", "avgSteps")
plot(avgStepsPer5MinInterval$interval, avgStepsPer5MinInterval$avgSteps, type="l",
main="Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps"))
with(subset(dfAll, dayOfWeekType == "weekend"),
avgStepsPer5MinInterval <- aggregate(dfAll$steps, by=list(df$interval), FUN=mean)
names(avgStepsPer5MinInterval) <- c("interval", "avgSteps")
plot(avgStepsPer5MinInterval$interval, avgStepsPer5MinInterval$avgSteps, type="l",
main="Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps"))
dfWeekend <- subset(dfAll, dayOfWeekType == "weekend")
dfWeekend <- subset(dfAll, dayOfWeekType == "weekend")
avgStepsPer5MinInterval <- aggregate(dfWeekend, by=list(dfWeekend$interval), FUN=mean)
names(avgStepsPer5MinInterval) <- c("interval", "avgSteps")
plot(avgStepsPer5MinInterval$interval, avgStepsPer5MinInterval$avgSteps, type="l",
main="Weekend - Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps")
isWeekend <- weekdays(as.Date(dfAll$date), abbreviate=TRUE) %in% c("Sat","Sun")
dfAll[isWeekend, "dayOfWeekType"] <- "weekend"
dfAll[!isWeekend, "dayOfWeekType"] <- "weekday"
dfAll$dayOfWeekType <- factor(dfAll$dayOfWeekType)
#Two panel plot:  Avg Steps vs Interval for "weekday" and "weekend"
par(mfrow = c(2, 1), mar = c(5, 4, 2, 1))
#  weekend:
dfWeekend <- subset(dfAll, dayOfWeekType == "weekend")
avgStepsPer5MinInterval <- aggregate(dfWeekend, by=list(dfWeekend$interval), FUN=mean)
names(avgStepsPer5MinInterval) <- c("interval", "avgSteps")
plot(avgStepsPer5MinInterval$interval, avgStepsPer5MinInterval$avgSteps, type="l",
main="Weekend - Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps")
par(mfrow = c(2, 1), mar = c(5, 4, 2, 1))
#  weekend:
dfWeekend <- subset(dfAll, dayOfWeekType == "weekend")
avgStepsPer5MinIntervalWeekend <- aggregate(dfWeekend, by=list(dfWeekend$interval), FUN=mean)
names(avgStepsPer5MinIntervalWeekend) <- c("interval", "avgSteps")
plot(avgStepsPer5MinIntervalWeekend$interval, avgStepsPer5MinIntervalWeekend$avgSteps, type="l",
main="Weekend - Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps")
rm(list=ls())
# Ensure that present working directory contains activity.csv
dfRaw <- read.csv("activity.csv")
# Remove NA rows
df <- dfRaw[!is.na(dfRaw$steps),]
stepsPerDay <- aggregate(df$steps, by=list(df$date), FUN=sum)$x
hist(stepsPerDay, main="Histogram of Steps Per Day",
xlab="Steps Per Day", breaks=10)
meanStepsPerDay <- mean(stepsPerDay)
medianStepsPerDay <- median(stepsPerDay)
avgStepsPer5MinInterval <- aggregate(df$steps, by=list(df$interval), FUN=mean)
names(avgStepsPer5MinInterval) <- c("interval", "avgSteps")
plot(avgStepsPer5MinInterval$interval, avgStepsPer5MinInterval$avgSteps, type="l",
main="Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps")
maxSteps5MinInterval <- avgStepsPer5MinInterval[which.max(avgStepsPer5MinInterval$avgSteps), "interval"]
stepsPerDay <- aggregate(df$steps, by=list(df$date), FUN=sum)$x
par(mfrow = c(1, 1))
hist(stepsPerDay, main="Histogram of Steps Per Day",
xlab="Steps Per Day", breaks=10)
meanStepsPerDay <- mean(stepsPerDay)
medianStepsPerDay <- median(stepsPerDay)
avgStepsPer5MinInterval <- aggregate(df$steps, by=list(df$interval), FUN=mean)
names(avgStepsPer5MinInterval) <- c("interval", "avgSteps")
plot(avgStepsPer5MinInterval$interval, avgStepsPer5MinInterval$avgSteps, type="l",
main="Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps")
maxSteps5MinInterval <- avgStepsPer5MinInterval[which.max(avgStepsPer5MinInterval$avgSteps), "interval"]
countNARows <- sum(is.na(dfRaw$steps))
# Replace NA steps on each day with the average steps per interval
dfAll <- merge(dfRaw, avgStepsPer5MinInterval, by="interval")
dfAll[is.na(dfAll$steps),"steps"] <- dfAll[is.na(dfAll$steps),"avgSteps"]
dfAll <- dfAll[order(dfAll$date,dfAll$interval),c("steps","date","interval")]
stepsPerDayAll <- aggregate(dfAll$steps, by=list(dfAll$date), FUN=sum)$x
hist(stepsPerDayAll, main="Histogram of Steps Per Day /n(No missing Values)",
xlab="Steps Per Day", breaks=10)
meanStepsPerDayAll <- mean(stepsPerDayAll)
medianStepsPerDayAll <- median(stepsPerDayAll)
#Create a new factor variable in the dataset with two levels – “weekday” and “weekend”
isWeekend <- weekdays(as.Date(dfAll$date), abbreviate=TRUE) %in% c("Sat","Sun")
dfAll[isWeekend, "dayOfWeekType"] <- "weekend"
dfAll[!isWeekend, "dayOfWeekType"] <- "weekday"
dfAll$dayOfWeekType <- factor(dfAll$dayOfWeekType)
#Two panel plot:  Avg Steps vs Interval for "weekday" and "weekend"
par(mfrow = c(2, 1), mar = c(5, 4, 2, 1))
#  weekend:
dfWeekend <- subset(dfAll, dayOfWeekType == "weekend")
avgStepsPer5MinIntervalWeekend <- aggregate(dfWeekend, by=list(dfWeekend$interval), FUN=mean)
names(avgStepsPer5MinIntervalWeekend) <- c("interval", "avgSteps")
plot(avgStepsPer5MinIntervalWeekend$interval, avgStepsPer5MinIntervalWeekend$avgSteps, type="l",
main="Weekend - Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps")
#  weekend:
dfWeekday <- subset(dfAll, dayOfWeekType == "weekday")
avgStepsPer5MinIntervalWeekday <- aggregate(dfWeekday, by=list(dfWeekday$interval), FUN=mean)
names(avgStepsPer5MinIntervalWeekday) <- c("interval", "avgSteps")
plot(avgStepsPer5MinIntervalWeekday, avgStepsPer5MinIntervalWeekday, type="l",
main="Weekend - Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps")
par(mfrow = c(1, 1))
#Create a new factor variable in the dataset with two levels – “weekday” and “weekend”
isWeekend <- weekdays(as.Date(dfAll$date), abbreviate=TRUE) %in% c("Sat","Sun")
dfAll[isWeekend, "dayOfWeekType"] <- "weekend"
dfAll[!isWeekend, "dayOfWeekType"] <- "weekday"
dfAll$dayOfWeekType <- factor(dfAll$dayOfWeekType)
#Two panel plot:  Avg Steps vs Interval for "weekday" and "weekend"
par(mfrow = c(2, 1), mar = c(5, 4, 2, 1))
#  weekend:
dfWeekend <- dfAll[dfAll$dayOfWeekType == "weekend",)
avgStepsPer5MinIntervalWeekend <- aggregate(dfWeekend, by=list(dfWeekend$interval), FUN=mean)
names(avgStepsPer5MinIntervalWeekend) <- c("interval", "avgSteps")
plot(avgStepsPer5MinIntervalWeekend$interval, avgStepsPer5MinIntervalWeekend$avgSteps, type="l",
main="Weekend - Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps")
isWeekend <- weekdays(as.Date(dfAll$date), abbreviate=TRUE) %in% c("Sat","Sun")
dfAll[isWeekend, "dayOfWeekType"] <- "weekend"
dfAll[!isWeekend, "dayOfWeekType"] <- "weekday"
dfAll$dayOfWeekType <- factor(dfAll$dayOfWeekType)
#Two panel plot:  Avg Steps vs Interval for "weekday" and "weekend"
par(mfrow = c(2, 1), mar = c(5, 4, 2, 1))
#  weekend:
dfWeekend <- dfAll[dfAll$dayOfWeekType == "weekend",)
dfAll$dayOfWeekType == "weekend"
dfWeekend <- dfAll[dfAll$dayOfWeekType == "weekend",]
avgStepsPer5MinIntervalWeekend <- aggregate(dfWeekend, by=list(dfWeekend$interval), FUN=mean)
names(avgStepsPer5MinIntervalWeekend) <- c("interval", "avgSteps")
plot(avgStepsPer5MinIntervalWeekend$interval, avgStepsPer5MinIntervalWeekend$avgSteps, type="l",
main="Weekend - Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps")
dfWeekend
View(dfWeekend)
avgStepsPer5MinIntervalWeekend <- aggregate(dfWeekend, by=list(dfWeekend$interval), FUN=mean)
warnings()
isWeekend <- weekdays(as.Date(dfAll$date), abbreviate=TRUE) %in% c("Sat","Sun")
dfAll[isWeekend, "dayOfWeekType"] <- "weekend"
dfAll[!isWeekend, "dayOfWeekType"] <- "weekday"
dfAll$dayOfWeekType <- factor(dfAll$dayOfWeekType)
#Two panel plot:  Avg Steps vs Interval for "weekday" and "weekend"
par(mfrow = c(2, 1), mar = c(5, 4, 2, 1))
#  weekend:
dfWeekend <- dfAll[dfAll$dayOfWeekType == "weekend",]
avgStepsPer5MinIntervalWeekend <- aggregate(dfWeekend$steps, by=list(dfWeekend$interval), FUN=mean)
names(avgStepsPer5MinIntervalWeekend) <- c("interval", "avgSteps")
plot(avgStepsPer5MinIntervalWeekend$interval, avgStepsPer5MinIntervalWeekend$avgSteps, type="l",
main="Weekend - Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps")
#  weekday:
dfWeekday <- dfAll[dfAll$dayOfWeekType == "weekday",]
avgStepsPer5MinIntervalWeekday <- aggregate(dfWeekday$steps, by=list(dfWeekday$interval), FUN=mean)
names(avgStepsPer5MinIntervalWeekday) <- c("interval", "avgSteps")
plot(avgStepsPer5MinIntervalWeekday, avgStepsPer5MinIntervalWeekday, type="l",
main="Weekend - Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps")
par(mfrow = c(1, 1))
isWeekend <- weekdays(as.Date(dfAll$date), abbreviate=TRUE) %in% c("Sat","Sun")
dfAll[isWeekend, "dayOfWeekType"] <- "weekend"
dfAll[!isWeekend, "dayOfWeekType"] <- "weekday"
dfAll$dayOfWeekType <- factor(dfAll$dayOfWeekType)
#Two panel plot:  Avg Steps vs Interval for "weekday" and "weekend"
par(mfrow = c(2, 1), mar = c(5, 4, 2, 1))
#  weekend:
dfWeekend <- dfAll[dfAll$dayOfWeekType == "weekend",]
avgStepsPer5MinIntervalWeekend <- aggregate(dfWeekend$steps, by=list(dfWeekend$interval), FUN=mean)
names(avgStepsPer5MinIntervalWeekend) <- c("interval", "avgSteps")
plot(avgStepsPer5MinIntervalWeekend$interval, avgStepsPer5MinIntervalWeekend$avgSteps, type="l",
main="Weekend - Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps")
dfWeekday <- dfAll[dfAll$dayOfWeekType == "weekday",]
avgStepsPer5MinIntervalWeekday <- aggregate(dfWeekday$steps, by=list(dfWeekday$interval), FUN=mean)
names(avgStepsPer5MinIntervalWeekday) <- c("interval", "avgSteps")
dfWeekday
avgStepsPer5MinIntervalWeekday
names(avgStepsPer5MinIntervalWeekday) <- c("interval", "avgSteps")
plot(avgStepsPer5MinIntervalWeekday, avgStepsPer5MinIntervalWeekday, type="l",
main="Weekend - Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps")
#  weekday:
dfWeekday <- dfAll[dfAll$dayOfWeekType == "weekday",]
avgStepsPer5MinIntervalWeekday <- aggregate(dfWeekday$steps, by=list(dfWeekday$interval), FUN=mean)
names(avgStepsPer5MinIntervalWeekday) <- c("interval", "avgSteps")
plot(avgStepsPer5MinIntervalWeekday$interval, avgStepsPer5MinIntervalWeekday$avgSteps, type="l",
main="Weekend - Average Daily Activity Pattern",
xlab = "5 min time interval", ylab="Avg number of steps")
par(mfrow = c(1, 1))
```
avgStepsPer5MinIntervalWeekday <- aggregate(dfWeekday$steps, by=list(dfWeekday$interval), FUN=mean)
?par
